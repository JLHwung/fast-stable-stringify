function fileObjToResult(fileObj) {
	var os;
	var osMap;
	var lib;
	var libData;
	var resultMap;
	var results = [];
	for (os in fileObj) {
		if (os !== '_metaData') {
			osMap = fileObj[os];
			resultMap = {};
			for (lib in osMap) {
				libData = osMap[lib];
				resultMap[lib] = {
					hz: libData.result.hz,
					rme: libData.result.rme,
					rhz: libData.result.rhz,
					fastest: libData.result.fastest,
					succeeded: !libData.result.error
				}
			}
			results.push({browser: libData.browser, os: libData.os, resultMap: resultMap});
		}
	}

	return results;
}

/**
 * Converts the file contents generated by BenchmarkStatsProcessor to a DataSetComparisonResult.
 * @param {Array} arrFileObj
 * @returns {DataSetComparisonResult[]}
 */
module.exports = function relativeFileCompare(arrFileObj) {
	return arrFileObj.reduce(function(results, fileObj) {
		return results.concat(fileObjToResult(fileObj));
	}, []);
};